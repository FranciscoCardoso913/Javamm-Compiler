import io;

Simple {
    .method public negative(i.i32).bool {
    tmp0.bool :=.bool i.i32 <.bool 0.i32;
    ret.bool tmp0.bool;
    }

    .method public static main(args.array.String).V {
        tmp2.Simple :=.Simple new(Simple).Simple;
        invokespecial(tmp2.Simple, "<init>").V;
        s.Simple :=.Simple tmp2.Simple;
        tmp3.bool :=.bool invokevirtual(s.Simple, "negative", 5.i32).bool;
        negRes.bool :=.bool tmp3.bool;
        invokestatic(io, "println", negRes.bool).V;
        ret.V;
    }

    .construct Simple().V {
    invokespecial(this, "<init>").V;
    }
}